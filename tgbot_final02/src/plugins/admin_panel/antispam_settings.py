"""
–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–Ω—Ç–∏—Å–ø–∞–º–∞ –¥–ª—è –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏
"""

import logging
from aiogram import Bot
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from sqlalchemy.ext.asyncio import async_sessionmaker

from .message_utils import edit_message, process_user_input
from utils.plugin_settings import load_plugin_settings, save_plugin_settings, get_plugin_setting, update_plugin_setting
from plugins.antiflood_plugin import sync_antispam_settings

logger = logging.getLogger(__name__)


class AntispamSettingsStates(StatesGroup):
    """–°–æ—Å—Ç–æ—è–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∞–Ω—Ç–∏—Å–ø–∞–º–∞"""
    VIEW = State()
    WAITING_LIMIT = State()
    WAITING_WINDOW = State()


async def safe_answer_callback(query: CallbackQuery):
    """–ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ callback query"""
    try:
        await query.answer()
    except Exception as e:
        logger.debug(f"Failed to answer callback query: {e}")


def get_antispam_settings_keyboard(settings: dict) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∞–Ω—Ç–∏—Å–ø–∞–º–∞"""
    status_emoji = "üü¢" if settings.get("enabled", True) else "üî¥"
    status_text = "–í—ã–∫–ª—é—á–∏—Ç—å" if settings.get("enabled", True) else "–í–∫–ª—é—á–∏—Ç—å"
    
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(
            text=f"{status_emoji} {status_text}", 
            callback_data="antispam:toggle"
        )],
        [InlineKeyboardButton(
            text=f"‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –ª–∏–º–∏—Ç ({settings.get('max_messages', 5)})", 
            callback_data="antispam:edit_limit"
        )],
        [InlineKeyboardButton(
            text=f"‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –ø–µ—Ä–∏–æ–¥ ({settings.get('window_seconds', 10)}—Å)", 
            callback_data="antispam:edit_window"
        )],
        [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="admin:main_menu")]
    ])


def get_back_to_antispam_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º –∞–Ω—Ç–∏—Å–ø–∞–º–∞"""
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º", callback_data="antispam:view")]
    ])


async def handle_antispam(query: CallbackQuery, state: FSMContext, bot: Bot, async_session_local):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –ê–Ω—Ç–∏—Å–ø–∞–º –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é"""
    await safe_answer_callback(query)
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
    await state.set_state(AntispamSettingsStates.VIEW)
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–Ω—Ç–∏—Å–ø–∞–º–∞
    await show_antispam_settings(query, state, bot, async_session_local)


async def show_antispam_settings(query: CallbackQuery, state: FSMContext, bot: Bot, async_session_local):
    """–ü–æ–∫–∞–∑–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–Ω—Ç–∏—Å–ø–∞–º–∞"""
    # –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    logger.info(f"üîç DEBUG: show_antispam_settings called with async_session_local type={type(async_session_local)}")
    logger.info(f"üîç DEBUG: bot type={type(bot)}")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ –ë–î
    settings = await load_plugin_settings("antispam", async_session_local)
    
    status_emoji = "üü¢" if settings.get("enabled", True) else "üî¥"
    status_text = "–í–∫–ª—é—á–µ–Ω" if settings.get("enabled", True) else "–í—ã–∫–ª—é—á–µ–Ω"
    
    text = f"""üîÑ <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–Ω—Ç–∏—Å–ø–∞–º–∞</b>

{status_emoji} <b>–°—Ç–∞—Ç—É—Å:</b> {status_text}
üìä <b>–õ–∏–º–∏—Ç:</b> {settings.get('max_messages', 5)} —Å–æ–æ–±—â–µ–Ω–∏–π
‚è±Ô∏è <b>–ü–µ—Ä–∏–æ–¥:</b> {settings.get('window_seconds', 10)} —Å–µ–∫—É–Ω–¥

<i>–ê–Ω—Ç–∏—Å–ø–∞–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–µ–≤—ã—à–∞—é—Ç –ª–∏–º–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–π –∑–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –≤—Ä–µ–º–µ–Ω–∏.</i>"""
    
    keyboard = get_antispam_settings_keyboard(settings)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º message_id –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
    current_message_id = await edit_message(query, text, keyboard, "HTML", bot)
    await state.update_data(last_message_id=current_message_id)


async def handle_antispam_toggle(query: CallbackQuery, state: FSMContext, bot: Bot, async_session_local):
    """–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∞–Ω—Ç–∏—Å–ø–∞–º–∞"""
    logger.info(f"üîç DEBUG: handle_antispam_toggle called with async_session_local type={type(async_session_local)}")
    
    await safe_answer_callback(query)
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    settings = await load_plugin_settings("antispam", async_session_local)
    
    # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º —Å—Ç–∞—Ç—É—Å
    new_enabled = not settings.get("enabled", True)
    updated_settings = update_plugin_setting(settings, "enabled", new_enabled)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ë–î
    await save_plugin_settings("antispam", updated_settings, async_session_local)
    
    # –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ –ø–ª–∞–≥–∏–Ω–µ
    await sync_antispam_settings(async_session_local)
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —ç–∫—Ä–∞–Ω
    await show_antispam_settings(query, state, bot, async_session_local)
    
    logger.info(f"Antispam {'enabled' if new_enabled else 'disabled'} by admin {query.from_user.id}")


async def handle_antispam_edit_limit(query: CallbackQuery, state: FSMContext, bot: Bot, async_session_local):
    """–ù–∞—á–∞—Ç—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–∏–º–∏—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏–π"""
    await safe_answer_callback(query)
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    settings = await load_plugin_settings("antispam", async_session_local)
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤–≤–æ–¥–∞ –ª–∏–º–∏—Ç–∞
    await state.set_state(AntispamSettingsStates.WAITING_LIMIT)
    
    text = f"""üìù <b>–ò–∑–º–µ–Ω–µ–Ω–∏–µ –ª–∏–º–∏—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏–π</b>

–¢–µ–∫—É—â–∏–π –ª–∏–º–∏—Ç: <b>{settings.get('max_messages', 5)}</b> —Å–æ–æ–±—â–µ–Ω–∏–π

–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –ª–∏–º–∏—Ç (–æ—Ç 1 –¥–æ 20):"""
    
    keyboard = get_back_to_antispam_keyboard()
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º message_id –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
    current_message_id = await edit_message(query, text, keyboard, "HTML", bot)
    await state.update_data(last_message_id=current_message_id)


async def handle_limit_input(message: Message, state: FSMContext, bot: Bot, async_session_local):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –Ω–æ–≤–æ–≥–æ –ª–∏–º–∏—Ç–∞"""
    try:
        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        try:
            await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)
        except Exception:
            pass  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è
        
        # –ü–æ–ª—É—á–∞–µ–º message_id –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞ –∏–∑ FSM
        data = await state.get_data()
        last_message_id = data.get('last_message_id')
        
        try:
            # –ü—ã—Ç–∞–µ–º—Å—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å –≤ —á–∏—Å–ª–æ
            new_limit = int(message.text.strip())
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∏–∞–ø–∞–∑–æ–Ω
            if new_limit < 1 or new_limit > 20:
                error_text = "‚ùå <b>–û—à–∏–±–∫–∞: –ù–µ–≤–µ—Ä–Ω—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω</b>\n\n–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 20:"
                error_keyboard = get_back_to_antispam_keyboard()
                
                # –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞
                if last_message_id:
                    try:
                        fake_query = type('FakeQuery', (), {
                            'message': type('FakeMessage', (), {
                                'chat': message.chat,
                                'message_id': last_message_id,
                                'photo': None, 'video': None, 'document': None,
                                'audio': None, 'voice': None, 'video_note': None
                            })(),
                            'answer': lambda **kwargs: None
                        })()
                        await edit_message(query=fake_query, text=error_text, reply_markup=error_keyboard, parse_mode="HTML", bot=bot)
                        return
                    except Exception:
                        # –ï—Å–ª–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å, —É–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                        try:
                            await bot.delete_message(chat_id=message.chat.id, message_id=last_message_id)
                        except Exception:
                            pass
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ—à–∏–±–∫–æ–π
                sent_message = await bot.send_message(
                    chat_id=message.chat.id,
                    text=error_text,
                    reply_markup=error_keyboard,
                    parse_mode="HTML"
                )
                await state.update_data(last_message_id=sent_message.message_id)
                return
            
            # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—ã–π –ª–∏–º–∏—Ç
            settings = await load_plugin_settings("antispam", async_session_local)
            updated_settings = update_plugin_setting(settings, "max_messages", new_limit)
            await save_plugin_settings("antispam", updated_settings, async_session_local)
            
            # –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ –ø–ª–∞–≥–∏–Ω–µ
            await sync_antispam_settings(async_session_local)
            
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º
            await state.set_state(AntispamSettingsStates.VIEW)
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∞–Ω—Ç–∏—Å–ø–∞–º–∞
            status_emoji = "üü¢" if updated_settings.get("enabled", True) else "üî¥"
            status_text = "–í–∫–ª—é—á–µ–Ω" if updated_settings.get("enabled", True) else "–í—ã–∫–ª—é—á–µ–Ω"
            
            settings_text = f"""üîÑ <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–Ω—Ç–∏—Å–ø–∞–º–∞</b>

{status_emoji} <b>–°—Ç–∞—Ç—É—Å:</b> {status_text}
üìä <b>–õ–∏–º–∏—Ç:</b> {updated_settings.get('max_messages', 5)} —Å–æ–æ–±—â–µ–Ω–∏–π
‚è±Ô∏è <b>–ü–µ—Ä–∏–æ–¥:</b> {updated_settings.get('window_seconds', 10)} —Å–µ–∫—É–Ω–¥

<i>–ê–Ω—Ç–∏—Å–ø–∞–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–µ–≤—ã—à–∞—é—Ç –ª–∏–º–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–π –∑–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –≤—Ä–µ–º–µ–Ω–∏.</i>"""
            
            settings_keyboard = get_antispam_settings_keyboard(updated_settings)
            
            # –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞
            if last_message_id:
                try:
                    fake_query = type('FakeQuery', (), {
                        'message': type('FakeMessage', (), {
                            'chat': message.chat,
                            'message_id': last_message_id,
                            'photo': None, 'video': None, 'document': None,
                            'audio': None, 'voice': None, 'video_note': None
                        })(),
                        'answer': lambda **kwargs: None
                    })()
                    await edit_message(query=fake_query, text=settings_text, reply_markup=settings_keyboard, parse_mode="HTML", bot=bot)
                    logger.info(f"Antispam limit changed to {new_limit} by admin {message.from_user.id}")
                    return
                except Exception:
                    # –ï—Å–ª–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å, —É–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                    try:
                        await bot.delete_message(chat_id=message.chat.id, message_id=last_message_id)
                    except Exception:
                        pass
            
            # Fallback: –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            sent_message = await bot.send_message(
                chat_id=message.chat.id,
                text=settings_text,
                reply_markup=settings_keyboard,
                parse_mode="HTML"
            )
            await state.update_data(last_message_id=sent_message.message_id)
            logger.info(f"Antispam limit changed to {new_limit} by admin {message.from_user.id}")
            
        except ValueError:
            # –ù–µ —á–∏—Å–ª–æ
            error_text = "‚ùå <b>–û—à–∏–±–∫–∞: –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ</b>\n\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –ª–∏–º–∏—Ç (–æ—Ç 1 –¥–æ 20):"
            error_keyboard = get_back_to_antispam_keyboard()
            
            # –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞
            if last_message_id:
                try:
                    fake_query = type('FakeQuery', (), {
                        'message': type('FakeMessage', (), {
                            'chat': message.chat,
                            'message_id': last_message_id,
                            'photo': None, 'video': None, 'document': None,
                            'audio': None, 'voice': None, 'video_note': None
                        })(),
                        'answer': lambda **kwargs: None
                    })()
                    await edit_message(query=fake_query, text=error_text, reply_markup=error_keyboard, parse_mode="HTML", bot=bot)
                    return
                except Exception:
                    # –ï—Å–ª–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å, —É–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                    try:
                        await bot.delete_message(chat_id=message.chat.id, message_id=last_message_id)
                    except Exception:
                        pass
            
            # Fallback: –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ—à–∏–±–∫–æ–π
            sent_message = await bot.send_message(
                chat_id=message.chat.id,
                text=error_text,
                reply_markup=error_keyboard,
                parse_mode="HTML"
            )
            await state.update_data(last_message_id=sent_message.message_id)
            
    except Exception as e:
        logger.error(f"Error in handle_limit_input: {e}")
        # –ü–æ—Å–ª–µ–¥–Ω–∏–π fallback
        try:
            await bot.send_message(
                chat_id=message.chat.id,
                text="‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.",
                parse_mode="HTML"
            )
        except Exception:
            pass


async def handle_antispam_edit_window(query: CallbackQuery, state: FSMContext, bot: Bot, async_session_local):
    """–ù–∞—á–∞—Ç—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–µ—Ä–∏–æ–¥–∞ –≤—Ä–µ–º–µ–Ω–∏"""
    await safe_answer_callback(query)
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ –ë–î
    settings = await load_plugin_settings("antispam", async_session_local)
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤–≤–æ–¥–∞ –ø–µ—Ä–∏–æ–¥–∞
    await state.set_state(AntispamSettingsStates.WAITING_WINDOW)
    
    text = f"""‚è±Ô∏è <b>–ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø–µ—Ä–∏–æ–¥–∞ –≤—Ä–µ–º–µ–Ω–∏</b>

–¢–µ–∫—É—â–∏–π –ø–µ—Ä–∏–æ–¥: <b>{settings['window_seconds']}</b> —Å–µ–∫—É–Ω–¥

–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –ø–µ—Ä–∏–æ–¥ (–æ—Ç 5 –¥–æ 300 —Å–µ–∫—É–Ω–¥):"""
    
    keyboard = get_back_to_antispam_keyboard()
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º message_id –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
    current_message_id = await edit_message(query, text, keyboard, "HTML", bot)
    await state.update_data(last_message_id=current_message_id)


async def handle_window_input(message: Message, state: FSMContext, bot: Bot, async_session_local):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –Ω–æ–≤–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞ –≤—Ä–µ–º–µ–Ω–∏"""
    try:
        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        try:
            await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)
        except Exception:
            pass  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è
        
        # –ü–æ–ª—É—á–∞–µ–º message_id –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞ –∏–∑ FSM
        data = await state.get_data()
        last_message_id = data.get('last_message_id')
        
        try:
            # –ü—ã—Ç–∞–µ–º—Å—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å –≤ —á–∏—Å–ª–æ
            new_window = int(message.text.strip())
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∏–∞–ø–∞–∑–æ–Ω
            if new_window < 5 or new_window > 300:
                error_text = "‚ùå <b>–û—à–∏–±–∫–∞: –ù–µ–≤–µ—Ä–Ω—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω</b>\n\n–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 5 –¥–æ 300 —Å–µ–∫—É–Ω–¥:"
                error_keyboard = get_back_to_antispam_keyboard()
                
                # –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞
                if last_message_id:
                    try:
                        fake_query = type('FakeQuery', (), {
                            'message': type('FakeMessage', (), {
                                'chat': message.chat,
                                'message_id': last_message_id,
                                'photo': None, 'video': None, 'document': None,
                                'audio': None, 'voice': None, 'video_note': None
                            })(),
                            'answer': lambda **kwargs: None
                        })()
                        await edit_message(query=fake_query, text=error_text, reply_markup=error_keyboard, parse_mode="HTML", bot=bot)
                        return
                    except Exception:
                        # –ï—Å–ª–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å, —É–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                        try:
                            await bot.delete_message(chat_id=message.chat.id, message_id=last_message_id)
                        except Exception:
                            pass
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ—à–∏–±–∫–æ–π
                sent_message = await bot.send_message(
                    chat_id=message.chat.id,
                    text=error_text,
                    reply_markup=error_keyboard,
                    parse_mode="HTML"
                )
                await state.update_data(last_message_id=sent_message.message_id)
                return
            
            # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –ø–µ—Ä–∏–æ–¥
            settings = await load_plugin_settings("antispam", async_session_local)
            updated_settings = update_plugin_setting(settings, "window_seconds", new_window)
            await save_plugin_settings("antispam", updated_settings, async_session_local)
            
            # –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ –ø–ª–∞–≥–∏–Ω–µ
            await sync_antispam_settings(async_session_local)
            
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º
            await state.set_state(AntispamSettingsStates.VIEW)
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∞–Ω—Ç–∏—Å–ø–∞–º–∞
            status_emoji = "üü¢" if updated_settings["enabled"] else "üî¥"
            status_text = "–í–∫–ª—é—á–µ–Ω" if updated_settings["enabled"] else "–í—ã–∫–ª—é—á–µ–Ω"
            
            settings_text = f"""üîÑ <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–Ω—Ç–∏—Å–ø–∞–º–∞</b>

{status_emoji} <b>–°—Ç–∞—Ç—É—Å:</b> {status_text}
üìä <b>–õ–∏–º–∏—Ç:</b> {updated_settings['max_messages']} —Å–æ–æ–±—â–µ–Ω–∏–π
‚è±Ô∏è <b>–ü–µ—Ä–∏–æ–¥:</b> {updated_settings['window_seconds']} —Å–µ–∫—É–Ω–¥

<i>–ê–Ω—Ç–∏—Å–ø–∞–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–µ–≤—ã—à–∞—é—Ç –ª–∏–º–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–π –∑–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –≤—Ä–µ–º–µ–Ω–∏.</i>"""
            
            settings_keyboard = get_antispam_settings_keyboard(updated_settings)
            
            # –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞
            if last_message_id:
                try:
                    fake_query = type('FakeQuery', (), {
                        'message': type('FakeMessage', (), {
                            'chat': message.chat,
                            'message_id': last_message_id,
                            'photo': None, 'video': None, 'document': None,
                            'audio': None, 'voice': None, 'video_note': None
                        })(),
                        'answer': lambda **kwargs: None
                    })()
                    await edit_message(query=fake_query, text=settings_text, reply_markup=settings_keyboard, parse_mode="HTML", bot=bot)
                    logger.info(f"Antispam window changed to {new_window} seconds by admin {message.from_user.id}")
                    return
                except Exception:
                    # –ï—Å–ª–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å, —É–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                    try:
                        await bot.delete_message(chat_id=message.chat.id, message_id=last_message_id)
                    except Exception:
                        pass
            
            # Fallback: –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            sent_message = await bot.send_message(
                chat_id=message.chat.id,
                text=settings_text,
                reply_markup=settings_keyboard,
                parse_mode="HTML"
            )
            await state.update_data(last_message_id=sent_message.message_id)
            logger.info(f"Antispam window changed to {new_window} seconds by admin {message.from_user.id}")
            
        except ValueError:
            # –ù–µ —á–∏—Å–ª–æ
            error_text = "‚ùå <b>–û—à–∏–±–∫–∞: –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ</b>\n\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –ø–µ—Ä–∏–æ–¥ (–æ—Ç 5 –¥–æ 300 —Å–µ–∫—É–Ω–¥):"
            error_keyboard = get_back_to_antispam_keyboard()
            
            # –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞
            if last_message_id:
                try:
                    fake_query = type('FakeQuery', (), {
                        'message': type('FakeMessage', (), {
                            'chat': message.chat,
                            'message_id': last_message_id,
                            'photo': None, 'video': None, 'document': None,
                            'audio': None, 'voice': None, 'video_note': None
                        })(),
                        'answer': lambda **kwargs: None
                    })()
                    await edit_message(query=fake_query, text=error_text, reply_markup=error_keyboard, parse_mode="HTML", bot=bot)
                    return
                except Exception:
                    # –ï—Å–ª–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å, —É–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                    try:
                        await bot.delete_message(chat_id=message.chat.id, message_id=last_message_id)
                    except Exception:
                        pass
            
            # Fallback: –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ—à–∏–±–∫–æ–π
            sent_message = await bot.send_message(
                chat_id=message.chat.id,
                text=error_text,
                reply_markup=error_keyboard,
                parse_mode="HTML"
            )
            await state.update_data(last_message_id=sent_message.message_id)
            
    except Exception as e:
        logger.error(f"Error in handle_window_input: {e}")
        # –ü–æ—Å–ª–µ–¥–Ω–∏–π fallback
        try:
            await bot.send_message(
                chat_id=message.chat.id,
                text="‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.",
                parse_mode="HTML"
            )
        except Exception:
            pass


# –§—É–Ω–∫—Ü–∏–∏ get_antispam_config –∏ update_antispam_config —É–¥–∞–ª–µ–Ω—ã
# –¢–µ–ø–µ—Ä—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ö—Ä–∞–Ω—è—Ç—Å—è –≤ –ë–î –∏ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è —á–µ—Ä–µ–∑ load_plugin_settings
