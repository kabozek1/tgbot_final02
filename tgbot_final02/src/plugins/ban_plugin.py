import asyncio
import re
from aiogram import Dispatcher
from aiogram.filters import Command
from aiogram.types import Message
from aiogram.exceptions import TelegramBadRequest, TelegramForbiddenError
from sqlalchemy.ext.asyncio import async_sessionmaker # Added import
from config import get_settings
from utils.admin_utils import is_user_admin


async def delete_command_message(message: Message):
    """–£–¥–∞–ª—è–µ—Ç –∫–æ–º–∞–Ω–¥—É –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏"""
    try:
        await message.delete()
    except (TelegramBadRequest, TelegramForbiddenError):
        pass  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è


async def send_and_auto_delete(message: Message, text: str, delay: int = 3):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª—è–µ—Ç –µ–≥–æ —á–µ—Ä–µ–∑ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è"""
    try:
        sent_message = await message.answer(text)
        # –ó–∞–ø—É—Å–∫–∞–µ–º —É–¥–∞–ª–µ–Ω–∏–µ –≤ —Ñ–æ–Ω–µ
        asyncio.create_task(delete_system_message_after_delay(sent_message, delay))
        return sent_message
    except Exception:
        return None


async def delete_system_message_after_delay(sent_message: Message, delay: int):
    """–£–¥–∞–ª—è–µ—Ç —Å–∏—Å—Ç–µ–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è"""
    try:
        await asyncio.sleep(delay)
        await sent_message.delete()
    except (TelegramBadRequest, TelegramForbiddenError):
        pass  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è


async def extract_user_info(message: Message, bot=None, async_session_local=None):
    """
    –ò–∑–≤–ª–µ–∫–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è.
    –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –¥–≤–∞ —Å–ø–æ—Å–æ–±–∞:
    1. @username —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –≤ —Ç–µ–∫—Å—Ç–µ –∫–æ–º–∞–Ω–¥—ã (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–π —Å–ø–æ—Å–æ–±)
    2. Reply –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç: (user_id, username) –∏–ª–∏ (None, None) –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å
    """
    # –°–ø–æ—Å–æ–± 1: @username –≤ —Ç–µ–∫—Å—Ç–µ –∫–æ–º–∞–Ω–¥—ã (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–π —Å–ø–æ—Å–æ–±)
    if message.text:
        # –ò—â–µ–º @username –≤ —Ç–µ–∫—Å—Ç–µ –∫–æ–º–∞–Ω–¥—ã
        username_match = re.search(r'@(\w+)', message.text)
        if username_match:
            username = username_match.group(1)
            
            # –£–±–∏—Ä–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è - –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –ª—é–±—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
            
            # –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ username
            if async_session_local:
                try:
                    from sqlalchemy.future import select
                    from models.base import User
                    
                    async with async_session_local() as session:
                        result = await session.execute(
                            select(User).where(User.username == username)
                        )
                        user = result.scalar_one_or_none()
                        if user:
                            return user.telegram_id, user.username or user.first_name or "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
                except Exception as e:
                    pass
            
            # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –≤ –ë–î, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ–ª—å–∫–æ username
            return None, username
    
    # –°–ø–æ—Å–æ–± 2: Reply –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if message.reply_to_message and message.reply_to_message.from_user:
        target_user = message.reply_to_message.from_user
        return target_user.id, target_user.username or target_user.first_name or "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
    
    return None, None


# –§—É–Ω–∫—Ü–∏—è is_user_admin —Ç–µ–ø–µ—Ä—å –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è –∏–∑ utils.admin_utils


def register(dp: Dispatcher, bot, async_session_local: async_sessionmaker):
    """Register ban plugin handlers."""
    
    async def kick_command(message: Message):
        """Kick user by replying to their message."""
        settings = get_settings()
        
        # –£–¥–∞–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
        await delete_command_message(message)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        if not await is_user_admin(message, message.from_user.id, async_session_local):
            await send_and_auto_delete(message, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.", settings.KICK_MESSAGE_DELETE_DELAY)
            return
        
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ü–µ–ª–µ–≤–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        user_id, username = await extract_user_info(message, bot, async_session_local)
        
        if not user_id:
            if username:
                await send_and_auto_delete(message, f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{username} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —ç—Ç–æ–º —á–∞—Ç–µ.", settings.KICK_MESSAGE_DELETE_DELAY)
            else:
                await send_and_auto_delete(message, "‚ùå –£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ @username.", settings.KICK_MESSAGE_DELETE_DELAY)
            return
        
        # Check if user is admin (can't kick admins)
        if await is_user_admin(message, user_id, async_session_local):
            await send_and_auto_delete(message, "‚ùå –ù–µ–ª—å–∑—è –∫–∏–∫–Ω—É—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.", settings.KICK_MESSAGE_DELETE_DELAY)
            return
        
        try:
            # Kick user (ban and immediately unban to allow rejoin)
            await message.bot.ban_chat_member(
                chat_id=message.chat.id,
                user_id=user_id
            )
            
            # Unban immediately to allow rejoin
            await message.bot.unban_chat_member(
                chat_id=message.chat.id,
                user_id=user_id
            )
            
            await send_and_auto_delete(message, f"üë¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{username} –∫–∏–∫–Ω—É—Ç –∏–∑ –≥—Ä—É–ø–ø—ã.", settings.KICK_MESSAGE_DELETE_DELAY)
                    
        except (TelegramBadRequest, TelegramForbiddenError) as e:
            await send_and_auto_delete(message, f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∫–∏–∫–Ω—É—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}", settings.KICK_MESSAGE_DELETE_DELAY)
        except Exception as e:
            await send_and_auto_delete(message, f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–∏–∫–µ: {e}", settings.KICK_MESSAGE_DELETE_DELAY)
    
    async def ban_command(message: Message):
        """Ban user permanently by replying to their message or using @username."""
        settings = get_settings()
        
        # –£–¥–∞–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
        await delete_command_message(message)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        if not await is_user_admin(message, message.from_user.id, async_session_local):
            await send_and_auto_delete(message, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.", settings.BAN_MESSAGE_DELETE_DELAY)
            return
        
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ü–µ–ª–µ–≤–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        user_id, username = await extract_user_info(message, bot, async_session_local)
        
        if not user_id:
            if username:
                await send_and_auto_delete(message, f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{username} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —ç—Ç–æ–º —á–∞—Ç–µ.", settings.BAN_MESSAGE_DELETE_DELAY)
            else:
                await send_and_auto_delete(message, "‚ùå –£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ @username.", settings.BAN_MESSAGE_DELETE_DELAY)
            return
        
        # Check if user is admin (can't ban admins)
        if await is_user_admin(message, user_id, async_session_local):
            await send_and_auto_delete(message, "‚ùå –ù–µ–ª—å–∑—è –∑–∞–±–∞–Ω–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.", settings.BAN_MESSAGE_DELETE_DELAY)
            return
        
        try:
            # Ban user permanently
            await message.bot.ban_chat_member(
                chat_id=message.chat.id,
                user_id=user_id
            )
            
            await send_and_auto_delete(message, f"üî® –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{username} –∑–∞–±–∞–Ω–µ–Ω –Ω–∞–≤—Å–µ–≥–¥–∞.", settings.BAN_MESSAGE_DELETE_DELAY)
                    
        except (TelegramBadRequest, TelegramForbiddenError) as e:
            await send_and_auto_delete(message, f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}", settings.BAN_MESSAGE_DELETE_DELAY)
        except Exception as e:
            await send_and_auto_delete(message, f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –±–∞–Ω–µ: {e}", settings.BAN_MESSAGE_DELETE_DELAY)
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    dp.message.register(kick_command, Command("kick"))
    dp.message.register(ban_command, Command("ban"))